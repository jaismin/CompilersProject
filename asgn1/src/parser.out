Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    KWRD_TYPE
    TYPE_STRING
    LESS
    LOWER_BOUND
    FLOAT_CONST
    KWRD_ARRAY
    STRING_CONST
    KWRD_LAZY
    BOOL_CONSTF
    VIEWABLE
    KWRD_THIS
    KWRD_WITH
    KWRD_FORSOME
    BOOL_CONSTT
    FUNTYPE
    KWRD_TRY
    KWRD_DO
    KWRD_RETURN
    NIL
    KWRD_SUPER
    KWRD_PROTECTED
    KWRD_FOREACH
    KWRD_PRIVATE
    OR
    VIEW
    KWRD_CASE
    EXACTEQ
    RBPAREN
    GEQ
    OR_BITWISE
    KWRD_ABST
    KWRD_UNTIL
    COLON
    KWRD_WHILE
    NEQUAL
    KWRD_STATIC
    KWRD_NEW
    UNDER
    AND
    KWRD_IF
    UPPER_BOUND
    NOT
    TYPE_CHAR
    INNER_CLASS
    KWRD_DEF
    KWRD_THROW
    KWRD_MACRO
    KWRD_CLASS
    KWRD_PUBLIC
    KWRD_MATCH
    MINUSEQ
    TILDA
    KWRD_FINAL
    COMM
    KWRD_IMPLICIT
    GREATER
    KWRD_SEALED
    KWRD_ELSE
    LEQ
    CHOOSE
    KWRD_FINALLY
    TYPE_INT
    CHARACTER
    EQUAL
    SUBTYPE
    KWRD_FOR
    QUESTION
    KWRD_VAR
    KWRD_VAL
    KWRD_YIELD
    KWRD_OVERRIDE
    KWRD_NULL
    AT
    KWRD_TRAIT
    LBPAREN
    AND_BITWISE
    PLUSEQ
    KWRD_CATCH

Grammar

Rule 0     S' -> ProgramStructure
Rule 1     ProgramStructure -> HeaderDef ObjectDef
Rule 2     HeaderDef -> Package HeaderDef
Rule 3     HeaderDef -> Import HeaderDef
Rule 4     HeaderDef -> empty
Rule 5     LibraryName -> IDENTIFIER DOT LibraryName
Rule 6     LibraryName -> IDENTIFIER
Rule 7     ImportExpr -> ImportExpr COMMA LibraryName
Rule 8     ImportExpr -> LibraryName
Rule 9     Package -> KWRD_PACKAGE ImportExpr
Rule 10    Import -> KWRD_IMPORT ImportExpr
Rule 11    Import -> KWRD_IMPORT ImportExpr STATE_END
Rule 12    ObjectDef -> ObjectDeclare BLOCK_BEGIN Block BLOCK_END
Rule 13    ObjectDeclare -> KWRD_OBJECT IDENTIFIER
Rule 14    ObjectDeclare -> KWRD_OBJECT IDENTIFIER KWRD_EXTNDS IDENTIFIER
Rule 15    Block -> arithmetic_statement STATE_END Block
Rule 16    Block -> print_st STATE_END Block
Rule 17    Block -> empty
Rule 18    arithmetic_statement -> IDENTIFIER ASSIGN expression
Rule 19    arithmetic_statement -> expression
Rule 20    expression -> expression PLUS expression
Rule 21    expression -> expression MINUS expression
Rule 22    expression -> expression TIMES expression
Rule 23    expression -> expression DIVIDE expression
Rule 24    expression -> - expression
Rule 25    expression -> LPAREN expression RPAREN
Rule 26    expression -> INT_CONST
Rule 27    expression -> IDENTIFIER
Rule 28    print_st -> IDENTIFIER LPAREN IDENTIFIER RPAREN
Rule 29    empty -> <empty>

Terminals, with rules where they appear

-                    : 24
AND                  : 
AND_BITWISE          : 
ASSIGN               : 18
AT                   : 
BLOCK_BEGIN          : 12
BLOCK_END            : 12
BOOL_CONSTF          : 
BOOL_CONSTT          : 
CHARACTER            : 
CHOOSE               : 
COLON                : 
COMM                 : 
COMMA                : 7
DIVIDE               : 23
DOT                  : 5
EQUAL                : 
EXACTEQ              : 
FLOAT_CONST          : 
FUNTYPE              : 
GEQ                  : 
GREATER              : 
IDENTIFIER           : 5 6 13 14 14 18 27 28 28
INNER_CLASS          : 
INT_CONST            : 26
KWRD_ABST            : 
KWRD_ARRAY           : 
KWRD_CASE            : 
KWRD_CATCH           : 
KWRD_CLASS           : 
KWRD_DEF             : 
KWRD_DO              : 
KWRD_ELSE            : 
KWRD_EXTNDS          : 14
KWRD_FINAL           : 
KWRD_FINALLY         : 
KWRD_FOR             : 
KWRD_FOREACH         : 
KWRD_FORSOME         : 
KWRD_IF              : 
KWRD_IMPLICIT        : 
KWRD_IMPORT          : 10 11
KWRD_LAZY            : 
KWRD_MACRO           : 
KWRD_MATCH           : 
KWRD_NEW             : 
KWRD_NULL            : 
KWRD_OBJECT          : 13 14
KWRD_OVERRIDE        : 
KWRD_PACKAGE         : 9
KWRD_PRIVATE         : 
KWRD_PROTECTED       : 
KWRD_PUBLIC          : 
KWRD_RETURN          : 
KWRD_SEALED          : 
KWRD_STATIC          : 
KWRD_SUPER           : 
KWRD_THIS            : 
KWRD_THROW           : 
KWRD_TRAIT           : 
KWRD_TRY             : 
KWRD_TYPE            : 
KWRD_UNTIL           : 
KWRD_VAL             : 
KWRD_VAR             : 
KWRD_WHILE           : 
KWRD_WITH            : 
KWRD_YIELD           : 
LBPAREN              : 
LEQ                  : 
LESS                 : 
LOWER_BOUND          : 
LPAREN               : 25 28
MINUS                : 21
MINUSEQ              : 
NEQUAL               : 
NIL                  : 
NOT                  : 
OR                   : 
OR_BITWISE           : 
PLUS                 : 20
PLUSEQ               : 
QUESTION             : 
RBPAREN              : 
RPAREN               : 25 28
STATE_END            : 11 15 16
STRING_CONST         : 
SUBTYPE              : 
TILDA                : 
TIMES                : 22
TYPE_CHAR            : 
TYPE_INT             : 
TYPE_STRING          : 
UNDER                : 
UPPER_BOUND          : 
VIEW                 : 
VIEWABLE             : 
error                : 

Nonterminals, with rules where they appear

Block                : 12 15 16
HeaderDef            : 1 2 3
Import               : 3
ImportExpr           : 7 9 10 11
LibraryName          : 5 7 8
ObjectDeclare        : 12
ObjectDef            : 1
Package              : 2
ProgramStructure     : 0
arithmetic_statement : 15
empty                : 4 17
expression           : 18 19 20 20 21 21 22 22 23 23 24 25
print_st             : 16

Parsing method: LALR

state 0

    (0) S' -> . ProgramStructure
    (1) ProgramStructure -> . HeaderDef ObjectDef
    (2) HeaderDef -> . Package HeaderDef
    (3) HeaderDef -> . Import HeaderDef
    (4) HeaderDef -> . empty
    (9) Package -> . KWRD_PACKAGE ImportExpr
    (10) Import -> . KWRD_IMPORT ImportExpr
    (11) Import -> . KWRD_IMPORT ImportExpr STATE_END
    (29) empty -> .

    KWRD_PACKAGE    shift and go to state 1
    KWRD_IMPORT     shift and go to state 5
    KWRD_OBJECT     reduce using rule 29 (empty -> .)

    Package                        shift and go to state 2
    ProgramStructure               shift and go to state 3
    Import                         shift and go to state 4
    HeaderDef                      shift and go to state 6
    empty                          shift and go to state 7

state 1

    (9) Package -> KWRD_PACKAGE . ImportExpr
    (7) ImportExpr -> . ImportExpr COMMA LibraryName
    (8) ImportExpr -> . LibraryName
    (5) LibraryName -> . IDENTIFIER DOT LibraryName
    (6) LibraryName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 10

    ImportExpr                     shift and go to state 9
    LibraryName                    shift and go to state 8

state 2

    (2) HeaderDef -> Package . HeaderDef
    (2) HeaderDef -> . Package HeaderDef
    (3) HeaderDef -> . Import HeaderDef
    (4) HeaderDef -> . empty
    (9) Package -> . KWRD_PACKAGE ImportExpr
    (10) Import -> . KWRD_IMPORT ImportExpr
    (11) Import -> . KWRD_IMPORT ImportExpr STATE_END
    (29) empty -> .

    KWRD_PACKAGE    shift and go to state 1
    KWRD_IMPORT     shift and go to state 5
    KWRD_OBJECT     reduce using rule 29 (empty -> .)

    Import                         shift and go to state 4
    HeaderDef                      shift and go to state 11
    empty                          shift and go to state 7
    Package                        shift and go to state 2

state 3

    (0) S' -> ProgramStructure .



state 4

    (3) HeaderDef -> Import . HeaderDef
    (2) HeaderDef -> . Package HeaderDef
    (3) HeaderDef -> . Import HeaderDef
    (4) HeaderDef -> . empty
    (9) Package -> . KWRD_PACKAGE ImportExpr
    (10) Import -> . KWRD_IMPORT ImportExpr
    (11) Import -> . KWRD_IMPORT ImportExpr STATE_END
    (29) empty -> .

    KWRD_PACKAGE    shift and go to state 1
    KWRD_IMPORT     shift and go to state 5
    KWRD_OBJECT     reduce using rule 29 (empty -> .)

    Import                         shift and go to state 4
    HeaderDef                      shift and go to state 12
    empty                          shift and go to state 7
    Package                        shift and go to state 2

state 5

    (10) Import -> KWRD_IMPORT . ImportExpr
    (11) Import -> KWRD_IMPORT . ImportExpr STATE_END
    (7) ImportExpr -> . ImportExpr COMMA LibraryName
    (8) ImportExpr -> . LibraryName
    (5) LibraryName -> . IDENTIFIER DOT LibraryName
    (6) LibraryName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 10

    ImportExpr                     shift and go to state 13
    LibraryName                    shift and go to state 8

state 6

    (1) ProgramStructure -> HeaderDef . ObjectDef
    (12) ObjectDef -> . ObjectDeclare BLOCK_BEGIN Block BLOCK_END
    (13) ObjectDeclare -> . KWRD_OBJECT IDENTIFIER
    (14) ObjectDeclare -> . KWRD_OBJECT IDENTIFIER KWRD_EXTNDS IDENTIFIER

    KWRD_OBJECT     shift and go to state 16

    ObjectDef                      shift and go to state 14
    ObjectDeclare                  shift and go to state 15

state 7

    (4) HeaderDef -> empty .

    KWRD_OBJECT     reduce using rule 4 (HeaderDef -> empty .)


state 8

    (8) ImportExpr -> LibraryName .

    COMMA           reduce using rule 8 (ImportExpr -> LibraryName .)
    KWRD_PACKAGE    reduce using rule 8 (ImportExpr -> LibraryName .)
    KWRD_IMPORT     reduce using rule 8 (ImportExpr -> LibraryName .)
    KWRD_OBJECT     reduce using rule 8 (ImportExpr -> LibraryName .)
    STATE_END       reduce using rule 8 (ImportExpr -> LibraryName .)


state 9

    (9) Package -> KWRD_PACKAGE ImportExpr .
    (7) ImportExpr -> ImportExpr . COMMA LibraryName

    KWRD_PACKAGE    reduce using rule 9 (Package -> KWRD_PACKAGE ImportExpr .)
    KWRD_IMPORT     reduce using rule 9 (Package -> KWRD_PACKAGE ImportExpr .)
    KWRD_OBJECT     reduce using rule 9 (Package -> KWRD_PACKAGE ImportExpr .)
    COMMA           shift and go to state 17


state 10

    (5) LibraryName -> IDENTIFIER . DOT LibraryName
    (6) LibraryName -> IDENTIFIER .

    DOT             shift and go to state 18
    COMMA           reduce using rule 6 (LibraryName -> IDENTIFIER .)
    KWRD_PACKAGE    reduce using rule 6 (LibraryName -> IDENTIFIER .)
    KWRD_IMPORT     reduce using rule 6 (LibraryName -> IDENTIFIER .)
    KWRD_OBJECT     reduce using rule 6 (LibraryName -> IDENTIFIER .)
    STATE_END       reduce using rule 6 (LibraryName -> IDENTIFIER .)


state 11

    (2) HeaderDef -> Package HeaderDef .

    KWRD_OBJECT     reduce using rule 2 (HeaderDef -> Package HeaderDef .)


state 12

    (3) HeaderDef -> Import HeaderDef .

    KWRD_OBJECT     reduce using rule 3 (HeaderDef -> Import HeaderDef .)


state 13

    (10) Import -> KWRD_IMPORT ImportExpr .
    (11) Import -> KWRD_IMPORT ImportExpr . STATE_END
    (7) ImportExpr -> ImportExpr . COMMA LibraryName

    KWRD_PACKAGE    reduce using rule 10 (Import -> KWRD_IMPORT ImportExpr .)
    KWRD_IMPORT     reduce using rule 10 (Import -> KWRD_IMPORT ImportExpr .)
    KWRD_OBJECT     reduce using rule 10 (Import -> KWRD_IMPORT ImportExpr .)
    STATE_END       shift and go to state 19
    COMMA           shift and go to state 17


state 14

    (1) ProgramStructure -> HeaderDef ObjectDef .

    $end            reduce using rule 1 (ProgramStructure -> HeaderDef ObjectDef .)


state 15

    (12) ObjectDef -> ObjectDeclare . BLOCK_BEGIN Block BLOCK_END

    BLOCK_BEGIN     shift and go to state 20


state 16

    (13) ObjectDeclare -> KWRD_OBJECT . IDENTIFIER
    (14) ObjectDeclare -> KWRD_OBJECT . IDENTIFIER KWRD_EXTNDS IDENTIFIER

    IDENTIFIER      shift and go to state 21


state 17

    (7) ImportExpr -> ImportExpr COMMA . LibraryName
    (5) LibraryName -> . IDENTIFIER DOT LibraryName
    (6) LibraryName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 10

    LibraryName                    shift and go to state 22

state 18

    (5) LibraryName -> IDENTIFIER DOT . LibraryName
    (5) LibraryName -> . IDENTIFIER DOT LibraryName
    (6) LibraryName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 10

    LibraryName                    shift and go to state 23

state 19

    (11) Import -> KWRD_IMPORT ImportExpr STATE_END .

    KWRD_PACKAGE    reduce using rule 11 (Import -> KWRD_IMPORT ImportExpr STATE_END .)
    KWRD_IMPORT     reduce using rule 11 (Import -> KWRD_IMPORT ImportExpr STATE_END .)
    KWRD_OBJECT     reduce using rule 11 (Import -> KWRD_IMPORT ImportExpr STATE_END .)


state 20

    (12) ObjectDef -> ObjectDeclare BLOCK_BEGIN . Block BLOCK_END
    (15) Block -> . arithmetic_statement STATE_END Block
    (16) Block -> . print_st STATE_END Block
    (17) Block -> . empty
    (18) arithmetic_statement -> . IDENTIFIER ASSIGN expression
    (19) arithmetic_statement -> . expression
    (28) print_st -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (29) empty -> .
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29
    BLOCK_END       reduce using rule 29 (empty -> .)
    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24

    Block                          shift and go to state 32
    arithmetic_statement           shift and go to state 28
    expression                     shift and go to state 30
    print_st                       shift and go to state 31
    empty                          shift and go to state 26

state 21

    (13) ObjectDeclare -> KWRD_OBJECT IDENTIFIER .
    (14) ObjectDeclare -> KWRD_OBJECT IDENTIFIER . KWRD_EXTNDS IDENTIFIER

    BLOCK_BEGIN     reduce using rule 13 (ObjectDeclare -> KWRD_OBJECT IDENTIFIER .)
    KWRD_EXTNDS     shift and go to state 33


state 22

    (7) ImportExpr -> ImportExpr COMMA LibraryName .

    COMMA           reduce using rule 7 (ImportExpr -> ImportExpr COMMA LibraryName .)
    KWRD_PACKAGE    reduce using rule 7 (ImportExpr -> ImportExpr COMMA LibraryName .)
    KWRD_IMPORT     reduce using rule 7 (ImportExpr -> ImportExpr COMMA LibraryName .)
    KWRD_OBJECT     reduce using rule 7 (ImportExpr -> ImportExpr COMMA LibraryName .)
    STATE_END       reduce using rule 7 (ImportExpr -> ImportExpr COMMA LibraryName .)


state 23

    (5) LibraryName -> IDENTIFIER DOT LibraryName .

    COMMA           reduce using rule 5 (LibraryName -> IDENTIFIER DOT LibraryName .)
    KWRD_PACKAGE    reduce using rule 5 (LibraryName -> IDENTIFIER DOT LibraryName .)
    KWRD_IMPORT     reduce using rule 5 (LibraryName -> IDENTIFIER DOT LibraryName .)
    KWRD_OBJECT     reduce using rule 5 (LibraryName -> IDENTIFIER DOT LibraryName .)
    STATE_END       reduce using rule 5 (LibraryName -> IDENTIFIER DOT LibraryName .)


state 24

    (26) expression -> INT_CONST .

    RPAREN          reduce using rule 26 (expression -> INT_CONST .)
    PLUS            reduce using rule 26 (expression -> INT_CONST .)
    MINUS           reduce using rule 26 (expression -> INT_CONST .)
    TIMES           reduce using rule 26 (expression -> INT_CONST .)
    DIVIDE          reduce using rule 26 (expression -> INT_CONST .)
    STATE_END       reduce using rule 26 (expression -> INT_CONST .)


state 25

    (24) expression -> - . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 35

state 26

    (17) Block -> empty .

    BLOCK_END       reduce using rule 17 (Block -> empty .)


state 27

    (25) expression -> LPAREN . expression RPAREN
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 36

state 28

    (15) Block -> arithmetic_statement . STATE_END Block

    STATE_END       shift and go to state 37


state 29

    (18) arithmetic_statement -> IDENTIFIER . ASSIGN expression
    (28) print_st -> IDENTIFIER . LPAREN IDENTIFIER RPAREN
    (27) expression -> IDENTIFIER .

    ASSIGN          shift and go to state 38
    LPAREN          shift and go to state 39
    PLUS            reduce using rule 27 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 27 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 27 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 27 (expression -> IDENTIFIER .)
    STATE_END       reduce using rule 27 (expression -> IDENTIFIER .)


state 30

    (19) arithmetic_statement -> expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression

    STATE_END       reduce using rule 19 (arithmetic_statement -> expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 41


state 31

    (16) Block -> print_st . STATE_END Block

    STATE_END       shift and go to state 44


state 32

    (12) ObjectDef -> ObjectDeclare BLOCK_BEGIN Block . BLOCK_END

    BLOCK_END       shift and go to state 45


state 33

    (14) ObjectDeclare -> KWRD_OBJECT IDENTIFIER KWRD_EXTNDS . IDENTIFIER

    IDENTIFIER      shift and go to state 46


state 34

    (27) expression -> IDENTIFIER .

    RPAREN          reduce using rule 27 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 27 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 27 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 27 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 27 (expression -> IDENTIFIER .)
    STATE_END       reduce using rule 27 (expression -> IDENTIFIER .)


state 35

    (24) expression -> - expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 24 (expression -> - expression .)
    PLUS            reduce using rule 24 (expression -> - expression .)
    MINUS           reduce using rule 24 (expression -> - expression .)
    TIMES           reduce using rule 24 (expression -> - expression .)
    DIVIDE          reduce using rule 24 (expression -> - expression .)
    STATE_END       reduce using rule 24 (expression -> - expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 41 ]


state 36

    (25) expression -> LPAREN expression . RPAREN
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 47
    PLUS            shift and go to state 40
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 41


state 37

    (15) Block -> arithmetic_statement STATE_END . Block
    (15) Block -> . arithmetic_statement STATE_END Block
    (16) Block -> . print_st STATE_END Block
    (17) Block -> . empty
    (18) arithmetic_statement -> . IDENTIFIER ASSIGN expression
    (19) arithmetic_statement -> . expression
    (28) print_st -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (29) empty -> .
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29
    BLOCK_END       reduce using rule 29 (empty -> .)
    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24

    arithmetic_statement           shift and go to state 28
    empty                          shift and go to state 26
    expression                     shift and go to state 30
    print_st                       shift and go to state 31
    Block                          shift and go to state 48

state 38

    (18) arithmetic_statement -> IDENTIFIER ASSIGN . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 49

state 39

    (28) print_st -> IDENTIFIER LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 50


state 40

    (20) expression -> expression PLUS . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 51

state 41

    (23) expression -> expression DIVIDE . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 52

state 42

    (21) expression -> expression MINUS . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 53

state 43

    (22) expression -> expression TIMES . expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 54

state 44

    (16) Block -> print_st STATE_END . Block
    (15) Block -> . arithmetic_statement STATE_END Block
    (16) Block -> . print_st STATE_END Block
    (17) Block -> . empty
    (18) arithmetic_statement -> . IDENTIFIER ASSIGN expression
    (19) arithmetic_statement -> . expression
    (28) print_st -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (29) empty -> .
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . - expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . INT_CONST
    (27) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29
    BLOCK_END       reduce using rule 29 (empty -> .)
    -               shift and go to state 25
    LPAREN          shift and go to state 27
    INT_CONST       shift and go to state 24

    arithmetic_statement           shift and go to state 28
    empty                          shift and go to state 26
    expression                     shift and go to state 30
    print_st                       shift and go to state 31
    Block                          shift and go to state 55

state 45

    (12) ObjectDef -> ObjectDeclare BLOCK_BEGIN Block BLOCK_END .

    $end            reduce using rule 12 (ObjectDef -> ObjectDeclare BLOCK_BEGIN Block BLOCK_END .)


state 46

    (14) ObjectDeclare -> KWRD_OBJECT IDENTIFIER KWRD_EXTNDS IDENTIFIER .

    BLOCK_BEGIN     reduce using rule 14 (ObjectDeclare -> KWRD_OBJECT IDENTIFIER KWRD_EXTNDS IDENTIFIER .)


state 47

    (25) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    STATE_END       reduce using rule 25 (expression -> LPAREN expression RPAREN .)


state 48

    (15) Block -> arithmetic_statement STATE_END Block .

    BLOCK_END       reduce using rule 15 (Block -> arithmetic_statement STATE_END Block .)


state 49

    (18) arithmetic_statement -> IDENTIFIER ASSIGN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression

    STATE_END       reduce using rule 18 (arithmetic_statement -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 41


state 50

    (28) print_st -> IDENTIFIER LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 56


state 51

    (20) expression -> expression PLUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 20 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 20 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 20 (expression -> expression PLUS expression .)
    STATE_END       reduce using rule 20 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 42 ]


state 52

    (23) expression -> expression DIVIDE expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 23 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 23 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 23 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 23 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 23 (expression -> expression DIVIDE expression .)
    STATE_END       reduce using rule 23 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 41 ]


state 53

    (21) expression -> expression MINUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 21 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 21 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 21 (expression -> expression MINUS expression .)
    STATE_END       reduce using rule 21 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 42 ]


state 54

    (22) expression -> expression TIMES expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 22 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 22 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 22 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 22 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 22 (expression -> expression TIMES expression .)
    STATE_END       reduce using rule 22 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 41 ]


state 55

    (16) Block -> print_st STATE_END Block .

    BLOCK_END       reduce using rule 16 (Block -> print_st STATE_END Block .)


state 56

    (28) print_st -> IDENTIFIER LPAREN IDENTIFIER RPAREN .

    STATE_END       reduce using rule 28 (print_st -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)

